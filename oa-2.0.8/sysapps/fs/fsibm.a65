/****************************************************************************
   
    OS/A65 Version 2.1.0
    Multitasking Operating System for 6502 Computers

    Copyright (C) 1989-1998 Andre Fachat 

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program; if not, write to the Free Software
    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.

****************************************************************************/

/*
 * TODO:
 *
 * WARNING! WARNING! WARNING! WARNING! WARNING! WARNING!
 *
 * This file lacks the stream error feature of the 1.4 kernel!
 *
 * To use it, you have to implement the stream error feature!
 *
 * In fact the file is still the 1.3 file, only the ROM boot stuff
 * and some error codes have been changed. To really use it,
 * you have to
 * 	- check error codes
 *	- implement the error feature, as well as push and pull flags
 *	- bugfixes
 */


#ifndef ROM

/*#define   NOPRG*/
#define   SHOW
#define   SHOWC
/*#define   BSHOW*/
/*#define   SHOWL*/
/*#define   SHOWN*/
/*#define   SHOWD*/

#endif /* ROM */
          .(

#ifdef ROM

          .word ende		; pointer to end of file in ROM
#ifdef FSIBM_AS_INIT
         .byt  PK_INIT+$80     ; file type = filesystem + auto-execute bit
#else
          .byt PK_PRG+$80	; file type = filesystem + auto-exec bit
#endif
          .word PRG
          .byt 32		; RAM size in 256-byte blocks
	  .byt >$ff-ROMSTART	; shared mem size from upper end
	  .byt 0		; priority (0=inherit)
          .byt STDNUL, FSIBM_OUTDEV	; stdin, stdout/stderr device number
          .asc "fsibm",0,0

#else /* ROM */

#include  "include/kdefs.i65"
#include  "include/fdefs.i65"
#include  "include/kernel.i65"

&main	jmp PRG

#endif /* ROM */


#include "sysapps/fs/fsibm/defs.a65"
#include "sysapps/fs/fsibm/loop.a65"
#include "sysapps/fs/fsibm/vars.a65"
#include "sysapps/fs/fsibm/cmd.a65"
#include "sysapps/fs/fsibm/util.a65"
#include "sysapps/fs/fsibm/file.a65"
#include "sysapps/fs/fsibm/cluster.a65"
#include "sysapps/fs/fsibm/drive.a65"
#include "sysapps/fs/fsibm/buffer.a65"
/* #include "sysapps/fs/fsibm/drv_wd1770.a65" */
/* #include "sysapps/fs/fsibm/drv_ramd1.a65" */
/* #include "sysapps/fs/fsibm/drv_ramd2.a65" */
#include FSIBM_DEVICE_DRV

ende	.)

